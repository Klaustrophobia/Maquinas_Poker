name: CI - Verificación backend y frontend

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]
  workflow_dispatch:

jobs:
  check-backend:
    name: 🔧 Verificar Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: 🔍 Checkout repositorio
        uses: actions/checkout@v4

      - name: ⚙️ Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: 📦 Instalar dependencias
        run: npm ci

      - name: 🧪 Verificar TypeScript
        run: npx tsc --noEmit

      - name: 🧹 Verificar ESLint
        run: |
          if [ -f .eslintrc.js ] || [ -f .eslintrc.json ]; then
            npx eslint . --ext js,jsx,ts,tsx
          else
            echo "Sin configuración ESLint, se omite."
          fi

      - name: 🧪 Ejecutar pruebas
        run: |
          if npm run | grep -q "test"; then
            npm test
          else
            echo "Sin script de pruebas definido en package.json"
          fi

      - name: 🏗️ Build Backend
        run: npm run build


  check-frontend:
    name: 💻 Verificar Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: 🔍 Checkout repositorio
        uses: actions/checkout@v4

      - name: ⚙️ Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: 📦 Instalar dependencias
        run: npm ci

      - name: 🧪 Verificar TypeScript
        run: npx tsc --noEmit

      - name: 🧹 Verificar ESLint
        run: |
          if [ -f .eslintrc.js ] || [ -f .eslintrc.json ]; then
            npx eslint . --ext js,jsx,ts,tsx
          else
            echo "Sin configuración ESLint, se omite."
          fi

      - name: 🧪 Ejecutar pruebas
        run: |
          if npm run | grep -q "test"; then
            npm test
          else
            echo "Sin script de pruebas definido en package.json"
          fi

      - name: 🏗️ Build Frontend
        run: npm run build
